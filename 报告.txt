I. 功能实现：
	1. 框架介绍
		(1) 网页前端使用Bootstrap和Jinja2搭建，使用了网上的免费模板，通过在其JavaScript脚本中引用flask读取的变量实现图表的绘制。
		(2) 使用API获取网络提供的天气数据，在python后端加以处理后，载入Flask框架。
		(3) 使用了FlaskForm表单类来自定义适用于此应用的表单，用户数据使用POST方法提交。
	2. 功能介绍
		您可以通过输入城市的英文名查询城市的天气情况。
		数据包含全球两万多个城市，拉近您与世界的距离；享受直观的图表展示，获取天气状况的变化折线图或曲线图；掌握未来三天的天气预报，以便及时做好准备。
	3. 程序使用说明
		您应该使用Python3来运行此程序，推荐使用Python3.7.2，需要在您的Python环境中安装flask, flask_moment, flask_wtf, wtforms, flask-bootstrap。
		运行程序时，请在终端将目录切换到main.py所在目录下，如果您是Linux或macOS用户，请使用如下命令：
			export FLASK_APP=main.py
			flask run
		如果您是Windows用户，请使用如下命令：
			set FLASK_APP=maim.py
			flask run
		请使用浏览器进入终端提示的地址，即可进入页面。
		进入页面后，点击左上角的Search，输入城市的英文名称，即可在网页上看到城市的天气数据。
	4. 对于代码的阐述请直接阅读代码源文件
	5. 个人收获
		为了完成本次作业，我学习了Flask框架，利用其中的一部分功能实现这个程序。由于不需要用户注册、登陆等操作，我没有使用数据库管理数据。
		在本次作业之前，我对Web了解不多。曾经尝试用Django完成网页后端，最终放弃选用的原因是Django较为繁杂。
		在本次作业中，除了Python框架，我还学习了Bootstrap前端框架，掌握了其基本使用方法。
		在开发过程中，我在url_for()函数在前端的使用上遇到了麻烦，运行程序时浏览器总是提示找不到我网页引用的css文件和javascript文件。查阅资料后发现，url_for()引用静态
		文件时是在static文件夹下进行搜寻。
		再者则是JavaScript对Flask传递给html的变量的引用。一开始我想利用json文件传递，但后来发现在html中的script直接引用会方便得多，虽然不够安全。
		
